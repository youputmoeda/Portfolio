/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 .\public\models\ninja.glb 
*/

import React, { useEffect } from 'react'
import { useFrame, useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations, useScroll } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useCharacterAnimations } from '../context/CharacterAnimations'

useGLTF.preload('./models/ninja.glb');

export default function Ninja(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('./models/ninja.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  console.log("Ninja:\n")
  console.log(nodes)

  const { setAnimations, animationIndex } = useCharacterAnimations();
  const { actions, names } = useAnimations(animations, group)
  const scroll = useScroll();

  useEffect(() => {
    setAnimations(names);
  }, [names, setAnimations])

  useEffect(() => {
    actions[names[animationIndex]].reset().play().paused = true;
  }, [actions, animationIndex, names])

  useFrame(() => {
    (actions[names[animationIndex]].time =
      (actions[names[animationIndex]].getClip().duration * scroll.offset) / 1)
  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Ch24"
            geometry={nodes.Ch24.geometry}
            material={materials.Ch24_Body}
            skeleton={nodes.Ch24.skeleton}
            castShadow
          />
        </group>
      </group>
    </group>
  )
}